<!DOCTYPE html>
<html>
  <head>
    <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
    <%= csrf_meta_tags %>
    <% @polyfills = [
          "fetch",
          "Promise",
          "Object.entries",
        ]
    %>
    <script src="https://cdn.polyfill.io/v2/polyfill.js?features=<%= @polyfills.join(",") %>"></script>
  </head>
  <style>
    body, h1, div, form, p, label, input, button{
      margin: 0;
      padding: 0;
      font-family: sans-serif;
    }
    form, div{
      width: 800px;
      margin: 0 auto;
      padding: 0;
      text-align: center;
    }
    .admonishment{
      margin-top: 10px;
      border-top: #DDD solid 1px;
      padding: 5px;
      font-size: 14px;
    }
    #view_port{
      width: 100vw !important;
      height: calc(100vh - 200px);
      background: #DDD;
      border-bottom: 1px #333 solid;
    }
    #pdf_view_port{
      width: 100%;
      height: 100%;
    }
    #acceptForm{
      opacity: 0;
    }
    #decision p{
      margin-bottom: 5px;
      font-size: 16px;
    }
    #decision input[type=text]{
      width: 100px;
      font-size: 16px;
    }
    label{
      padding: 0 10px;
    }
    header{
      background: #333;
      color: #fff;
      height: 30px;
    }
    header div{
      width: 800px;
      margin: 0 auto;
    }
    header h1{
      font-size: 22px;
      text-align: center;
    }
    #logout p{
      font-size: 14px;
      float: left;
      padding: 3px;
    }
    #logout input[type=submit], #decision p button{
      margin: 2px 5px 2px 5px;
      padding: 0 5px;
      font-size: 14px;
      outline: 0;
      border: #ccc solid 1px;
      background: #eee;
    }
    #logout input[type=submit]:hover, #decision p button:hover{
      border: #aaa solid 1px;
      background: #ccc;
    }
    #logout input[type=submit]:active, #decision p button:active{
      border: #aaa solid 1px;
      background: #bbb;
    }
    #logout {
      float: right;
      width: auto;
    }
  </style>

  <body>
    <header>
      <form id="logout" action="/logout" method="post">
        <p>User: <b><%=@offer[:applicant][:utorid]%></b></p>
        <input value="Logout" type="submit" />
      </form>
      <div>
        <h1>Offer for Teaching Assistantship of <%=@offer[:position]%></h1>
      </div>
    </header>
    <div id="view_port">
      <embed id="pdf_view_port" type='application/pdf' name="contract.pdf" src="/pb/<%= @offer[:id] %>/pdf"/>
    </div>
    <form id='decision'>
	    <p>I understand and accept the above Teaching Assistantship for <%=@offer[:position]%> on the terms and conditions noted in the letter and understand and agree that the offer will be deemed null and void (or my employment will be deemed abandoned) if any of the noted conditions are not satisfied.
	    </p>
      <p>
        <label><input onchange="showAcceptForm()" name="decision" type="radio" value="accept"/>Accept</label>
        <label><input onchange="showAcceptForm()" name="decision" type="radio" value="reject"/>Reject</label>
      </p>
      <p>
        <label id="acceptForm">To accept the contract, type your initial:
          <input id="signature" type="text" name="signature_name" required="required" maxlength="10">
        </label>
      </p>
      <p><button type='button' onclick='submitDecision()'>Submit</button></p>
    </form>
    <div id='status'>
    </div>
    <div class='admonishment'>
	    <p><b>Important:</b>  Our office will notify you on how to submit payroll documents in the coming weeks if we do not already have this information. </p>
    </div>

    <script>
      function setupPage(offer_status){
        let status = document.getElementById('status');
        let decision = document.getElementById('decision');
        if (offer_status == 'pending'){
          status.style.display='none';
          decision.style.display='block';
        }
        else{
          status.style.display='block';
          decision.style.display='none';
          status.innerHTML = '<h2>Status: </h2>'+
          '<p>This offer has been '+offer_status+'.</p>';
        }
      }
      // helper factoring out frequently used code around a fetch
      function fetchHelper(url, init, action){
        fetch(url, init).then(function(response) {
          return response.json();
        }).then(function(response){
            action(response);
        });
      }
      function postHelper(url, data, action){
        let init = {
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json; charset=utf-8',
            },
            method: 'POST',
            body: JSON.stringify(data),
            credentials: 'include', // This line is crucial in any fetch because it is needed to work with Shibboleth in production
        };
        fetchHelper(url, init, action);
      }
      function showAcceptForm(){
        let acceptForm= document.getElementById('acceptForm');
        let decision= getDecision();
        if (decision !=null){
          if(decision.value=='accept')
            acceptForm.style.opacity="1";
          else
            acceptForm.style.opacity="0";
        }
      }
      function getDecision(){
        let decision = document.getElementsByName('decision');
        let selected = null;
        for (let i = 0; i< decision.length; i++){
          if (decision[i].checked)
            selected = decision[i];
        }
        return selected;
      }
      function submitDecision(){
        let decision = getDecision();
        let signature = document.getElementById('signature');
        if (decision != null){
          if(decision.value=='accept'){
            if (signature.value.trim()!=""){
              postStatus(decision.value, signature.value.trim());
            }
            else{
              alert("Error: you haven't signed your name yet.");
            }
          }
          else if (decision.value=='reject'){
            postStatus(decision.value, null);
          }
        }
        else{
          alert("Error: you haven't chosen whether to accept or reject.")
        }
      }
      function postStatus(status, signature){
        let res = confirm("Are you sure you want to "+status+" the TAship for this offer?");
        let data = {}
        if (signature!=null){
          data["signature"] = signature;
        }
        if (res) {
          postHelper("/pb/<%= @offer[:id] %>/"+status, data, updateStatus);
        }
      }
      function updateStatus(response){
        refreshPdf();
        alert(response.message);
        if (response.success){
          setupPage(response.status);
        }
      }
      function refreshPdf(){
        let viewport = document.getElementById("view_port");
        let html = viewport.innerHTML;
        viewport.innerHTML = '';
        viewport.innerHTML = html;
      }
      setupPage('<%= @offer[:status].downcase %>');
    </script>
  </body>
</html>
